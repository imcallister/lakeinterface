# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/lakeinterface',
                'doc_host': 'https://imcallister.github.io',
                'git_url': 'https://github.com/imcallister/lakeinterface',
                'lib_path': 'lakeinterface'},
  'syms': { 'lakeinterface.aurora': { 'lakeinterface.aurora.Aurora': ('aurora.html#aurora', 'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.__exit__': ('aurora.html#aurora.__exit__', 'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.__init__': ('aurora.html#aurora.__init__', 'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.__new__': ('aurora.html#aurora.__new__', 'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.aurora_connection': ( 'aurora.html#aurora.aurora_connection',
                                                                                         'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.close_connections': ( 'aurora.html#aurora.close_connections',
                                                                                         'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.open_read_connection': ( 'aurora.html#aurora.open_read_connection',
                                                                                            'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.open_write_connection': ( 'aurora.html#aurora.open_write_connection',
                                                                                             'lakeinterface/aurora.py'),
                                      'lakeinterface.aurora.Aurora.query': ('aurora.html#aurora.query', 'lakeinterface/aurora.py')},
            'lakeinterface.config': { 'lakeinterface.config.ConfigManager': ('config.html#configmanager', 'lakeinterface/config.py'),
                                      'lakeinterface.config.ConfigManager.__init__': ( 'config.html#configmanager.__init__',
                                                                                       'lakeinterface/config.py'),
                                      'lakeinterface.config.ConfigManager._get_parameter': ( 'config.html#configmanager._get_parameter',
                                                                                             'lakeinterface/config.py'),
                                      'lakeinterface.config.ConfigManager.fetch_config': ( 'config.html#configmanager.fetch_config',
                                                                                           'lakeinterface/config.py')},
            'lakeinterface.core': {'lakeinterface.core.foo': ('core.html#foo', 'lakeinterface/core.py')},
            'lakeinterface.lake': { 'lakeinterface.lake.LakeConfigNotFound': ('datalake.html#lakeconfignotfound', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface': ('datalake.html#lakeinterface', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.__init__': ( 'datalake.html#lakeinterface.__init__',
                                                                                   'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.aurora_connection': ( 'datalake.html#lakeinterface.aurora_connection',
                                                                                            'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.get': ('datalake.html#lakeinterface.get', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.get_object': ( 'datalake.html#lakeinterface.get_object',
                                                                                     'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.get_query_results': ( 'datalake.html#lakeinterface.get_query_results',
                                                                                            'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.list_objects': ( 'datalake.html#lakeinterface.list_objects',
                                                                                       'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.load_csv': ( 'datalake.html#lakeinterface.load_csv',
                                                                                   'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.load_json': ( 'datalake.html#lakeinterface.load_json',
                                                                                    'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.most_recent': ( 'datalake.html#lakeinterface.most_recent',
                                                                                      'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.put': ('datalake.html#lakeinterface.put', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.put_object': ( 'datalake.html#lakeinterface.put_object',
                                                                                     'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.save_json': ( 'datalake.html#lakeinterface.save_json',
                                                                                    'lakeinterface/lake.py'),
                                    'lakeinterface.lake.LakeInterface.start_query': ( 'datalake.html#lakeinterface.start_query',
                                                                                      'lakeinterface/lake.py'),
                                    'lakeinterface.lake.aurora_query': ('datalake.html#aurora_query', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.get_data_catalog': ('datalake.html#get_data_catalog', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.parse_column_info': ('datalake.html#parse_column_info', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.parse_table_info': ('datalake.html#parse_table_info', 'lakeinterface/lake.py'),
                                    'lakeinterface.lake.unzip': ('datalake.html#unzip', 'lakeinterface/lake.py')},
            'lakeinterface.s3': { 'lakeinterface.s3.S3': ('s3.html#s3', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.__init__': ('s3.html#s3.__init__', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.__new__': ('s3.html#s3.__new__', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.get': ('s3.html#s3.get', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.get_object': ('s3.html#s3.get_object', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.list_objects': ('s3.html#s3.list_objects', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.load_csv': ('s3.html#s3.load_csv', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.load_json': ('s3.html#s3.load_json', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.most_recent': ('s3.html#s3.most_recent', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.put': ('s3.html#s3.put', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.put_object': ('s3.html#s3.put_object', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3.save_json': ('s3.html#s3.save_json', 'lakeinterface/s3.py'),
                                  'lakeinterface.s3.S3ObjectNotFound': ('s3.html#s3objectnotfound', 'lakeinterface/s3.py')},
            'lakeinterface.utilities': {'lakeinterface.utilities.func_timer': ('utilities.html#func_timer', 'lakeinterface/utilities.py')}}}
